# GNU Make workspace makefile autogenerated by Premake

ifndef config
  config=debug
endif

ifndef verbose
  SILENT = @
endif

ifeq ($(config),debug)
  StandardFileIO_config = debug
  StandardLogger_config = debug
  Compiler_config = debug
endif
ifeq ($(config),release)
  StandardFileIO_config = release
  StandardLogger_config = release
  Compiler_config = release
endif

PROJECTS := StandardFileIO StandardLogger Compiler

.PHONY: all clean help $(PROJECTS) 

all: $(PROJECTS)

StandardFileIO:
ifneq (,$(StandardFileIO_config))
	@echo "==== Building StandardFileIO ($(StandardFileIO_config)) ===="
	@${MAKE} --no-print-directory -C StandardFileIO -f Makefile config=$(StandardFileIO_config)
endif

StandardLogger:
ifneq (,$(StandardLogger_config))
	@echo "==== Building StandardLogger ($(StandardLogger_config)) ===="
	@${MAKE} --no-print-directory -C StandardLogger -f Makefile config=$(StandardLogger_config)
endif

Compiler: StandardFileIO StandardLogger
ifneq (,$(Compiler_config))
	@echo "==== Building Compiler ($(Compiler_config)) ===="
	@${MAKE} --no-print-directory -C Compiler -f Makefile config=$(Compiler_config)
endif

clean:
	@${MAKE} --no-print-directory -C StandardFileIO -f Makefile clean
	@${MAKE} --no-print-directory -C StandardLogger -f Makefile clean
	@${MAKE} --no-print-directory -C Compiler -f Makefile clean

help:
	@echo "Usage: make [config=name] [target]"
	@echo ""
	@echo "CONFIGURATIONS:"
	@echo "  debug"
	@echo "  release"
	@echo ""
	@echo "TARGETS:"
	@echo "   all (default)"
	@echo "   clean"
	@echo "   StandardFileIO"
	@echo "   StandardLogger"
	@echo "   Compiler"
	@echo ""
	@echo "For more information, see https://github.com/premake/premake-core/wiki"